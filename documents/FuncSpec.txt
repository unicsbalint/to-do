
###Functional specification###

1. Introduction

Our goal is to make a one of a kind To-Do list. 
It’s a well-known thing that our brain can only manage several things even in young age and this only gets worse as you age. 
A To-Do list can help your remember tasks, meetings, deadlines and so on. 
Benefits are endless. 

----------------------------------------------------------------------------------------------------------------------------------------------------------
2. Description of the current state:

//copied from ReqSpec
Nowadays there are nearly infinite ways to track our actions. Many of which has the same issue, like boring design, 
extremely slow startup or the countless amount of useless features. These apps usually forces you to register to use their product.
Some of these softwares are targeting big companies and teams instead of the small ones, so these people will struggle using apps made for teams of 100s.

----------------------------------------------------------------------------------------------------------------------------------------------------------
3. Description of the desired system:

//copied from ReqSpec.
A simple web application in which the users can manage their tasks.
The application will grab the very core of a task managing system therefore increasing efficiency, and will display it in a user-friendly way.
The users will be able to add new tasks to the list, complete them and remove the tasks from the list.
They will have the oppurtunity to print these goals.
When adding a new task the users can set deadlines on them.
The users will be able to register to the application with a username and password combination
and after a successful login they will see their name on their tasks and their tasks will be saved.

----------------------------------------------------------------------------------------------------------------------------------------------------------
4. Related laws:

N/A

----------------------------------------------------------------------------------------------------------------------------------------------------------
5. Model of the current business process:

Nowadays it is no surprise that we have a lot of task-managing applications on the internet.
The problem with these is that the developers want to make these applications do more and more
so people will use their product instead of the others and adding more functions to an app will
make it harder to maintain and more difficult to use.

----------------------------------------------------------------------------------------------------------------------------------------------------------
6. Model of the required business process:

//copied from ReqSpec.
In our app the user can register on the main page using their username and password. After the registartion the user
will be able to login using the same combination. After the user logged in, they will be granted access to the 
application's features. The registered user can manage their tasks or print them. The tasks will have a description,
deadline and they will be saved to a database.   

----------------------------------------------------------------------------------------------------------------------------------------------------------
7. List of requirements:

ID  Name 			 Explanation
--------------------------------------------------------------------------
R1; User-friendly display;	 Simplified and easy-to-use design
R2; Add tasks;		 	 The user can add a new task
R3; Remove tasks;		 The user can remove a task
R4; Complete tasks;		 The application will handle if the user completes a task
R5; Print tasks;		 The users will be able to print their tasks
R6; Register user;		 The application will have a way to register the users. The users will be saved to a database
R7; Login user;			 Registered users can login with their username and password combination
R8; Save tasks;		 	 The application will save the tasks if the user is logged in
R9; Efficiency;			 The app loads and functions in a quick and resource-friendly way

----------------------------------------------------------------------------------------------------------------------------------------------------------
8. Cases of use:

    -USER :
                    - Can add things to list and store them.
                    - Can mark items in the list as already done or can remove it completely.
		    - Can print their goals.
                    - Can change personal data. (Email address, password)
                    - Can remove the account permanently with all of the stored data.

----------------------------------------------------------------------------------------------------------------------------------------------------------
9. Compliance:

Add tasks: 		There will be a button, when the user clicks on it the task will be created.

Remove tasks:  		When a task is created, the user can decide if they want to keep it or remove it. The user will have a button to remove
	       		the task.

Complete tasks 		When the user finish their task, there will be a button to mark it as done.

Print tasks:		There will be a button to print all the tasks.

User management:	The system will have a registration and login panel. The user can register and then login.

Save tasks:		Once the user logged in, the system save the tasks and their status automatically.

----------------------------------------------------------------------------------------------------------------------------------------------------------
10. Screen designs:

We want our web application to look simple by placing function buttons in a breezy manner.

----------------------------------------------------------------------------------------------------------------------------------------------------------
11. Scenarios:

Bob wants to write his life goals to somewhere. He finds our web application and starts to write them down.
He wants to come back if he finds new goals, so he registered and logged in. Then he don't have to worry
because his goals will be stored, and his data will be safely handled.

Bob easily forgets his daily tasks, so He wants to write them down, but He don't want to use pen and paper for that, so he goes up to web, search for a solution which is our to-do app.

----------------------------------------------------------------------------------------------------------------------------------------------------------
12. Function - requirement matching

We can match the requirements with the functions since it's a simple app and we have all the tools to get the project done: PHP for Back-End ,MySql - for database and HTML,CSS,JS for the Front-end.

----------------------------------------------------------------------------------------------------------------------------------------------------------
13. Concept dictionary

PHP: 	It's a programming language that is usually processed on a web server.
HTML:	It's a document that is designed to be displayed on the web browser.
CSS: 	It's a document which affect the webpage's design.
JavaScript: JavaScript is a programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, etc. — you can bet that JavaScript is probably involved. It is the third layer of the layer cake of standard web technologies(front-end), the others are HTML and CSS.

----------------------------------------------------------------------------------------------------------------------------------------------------------
