
###Functional specification###

#Introduction
Our goal is to make a one of a kind To-Do list. 
Itâ€™s a well-known thing that our brain can only manage several things even in young age and this only gets worse as you age. 
A To-Do list can help your remember tasks, meetings, deadlines and so on. 
Benefits are endless. 


# Goals of the system:
We would like to make a simple web application that offers a clean and elegant look and functions quickly.

# Description of the current state:
//copied from ReqSpec
Nowadays there are nearly infinite ways to track our actions. Many of which has the same issue, like boring design, 
extremely slow startup or the countless amount of useless features. These apps usually forces you to register to use their product.
Some of these softwares are targeting big companies and teams instead of the small ones, so these people will struggle using apps made for teams of 100s.

# Description of the desired system:
//copied from ReqSpec.
A simple web application in which the users can manage their tasks.
The application will grab the very core of a task managing system therefore increasing efficiency, and will display it in a user-friendly way.
The users will be able to add new tasks to the list, complete them and remove the tasks from the list.
They will have the oppurtunity to print these goals.
When adding a new task the users can set deadlines on them.
The users will be able to register to the application with a username and password combination
and after a successful login they will see their name on their tasks and their tasks will be saved.

# Related laws:
N/A


# Model of the current business process:

//copied from ReqSpec.
With the improvement of technology, the simple apps contains unnecessary features too, which slows them down and
make their design become overcrowded with buttons and functions. An avarage person wastes a lot of time browsing
feautures they will not use.

# Model of the required business process:

//copied from ReqSpec.
In our app the user can register on the main page using their username and password. After the registartion the user
will be able to login using the same combination. After the user logged in, they will be granted access to the 
application's features. The registered user can manage their tasks or print them. The tasks will have a description,
deadline and they will be saved to a database.   


# List of requirements:

ID  Name 			 Explanation
--------------------------------------------------------------------------
R1; User-friendly display;	 Simplified and easy-to-use design
R2; Add tasks;		 	 The user can add a new task
R3; Remove tasks;		 The user can remove a task
R4; Complete tasks;		 The application will handle if the user completes a task
R5; Print tasks;		 The users will be able to print their tasks
R6; Register user;		 The application will have a way to register the users. The users will be saved to a database
R7; Login user;			 Registered users can login with their username and password combination
R8; Save tasks;		 	 The application will save the tasks if the user is logged in
R9; Efficiency;			 The app loads and functions in a quick and resource-friendly way


# Cases of use:
    -USER :
                    - Can add things to list and store them.
                    - Can mark items in the list as already done or can remove it completely.
		    - Can print their goals.
                    - Can change personal data. (Email address, password)
                    - Can remove the account permanently with all of the stored data.

# Compliance:

# Screen designs:

We want our web application to look simple by placing function buttons in a breezy manner.

# Scenarios:

Bob wants to write his life goals to somewhere. He finds our web application and starts to write them down.
He wants to come back if he finds new goals, so he registered and logged in. Then he don't have to worry
because his goals will be stored, and his data will be safely handled.

# Function - requirement matching

# Concept dictionary